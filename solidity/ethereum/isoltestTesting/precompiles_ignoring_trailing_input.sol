contract C {
    function ecRecover(uint[4] memory input) public returns (bytes memory) {
        (bool success, bytes memory encodedOutput) = address(1).call(abi.encode(input));
        require(success);
        return encodedOutput;
    }

    function ecAdd(uint[4] memory input) public returns (bytes memory) {
        (bool success, bytes memory encodedOutput) = address(6).call(abi.encode(input));
        require(success);
        return encodedOutput;
    }

    function ecMul(uint[3] memory input) public returns (bytes memory) {
        (bool success, bytes memory encodedOutput) = address(7).call(abi.encode(input));
        require(success);
        return encodedOutput;
    }
}
// ====
// EVMVersion: >=byzantium
// ----
// ecRecover(uint256[4]): 0x18c547e4f7b0f325ad1e56f57e26c745b09a3e503d86e00e5255ff7f715d3d1c, 0x000000000000000000000000000000000000000000000000000000000000001c, 0x73b1693892219d736caba55bdb67216e485557ea6b6af75f37096c9aa6a5a75f, 0xeeb940b1d03b21e36b0e47e79769f095fe2ab855bd91e3a38756b7d75a9c4549                   -> 0x20, 0x20, 966588469268559010541288244128342317224451555083
// ecRecover(uint256[4]): 0x18c547e4f7b0f325ad1e56f57e26c745b09a3e503d86e00e5255ff7f715d3d1c, 0x000000000000000000000000000000000000000000000000000000000000001c, 0x73b1693892219d736caba55bdb67216e485557ea6b6af75f37096c9aa6a5a75f, 0xeeb940b1d03b21e36b0e47e79769f095fe2ab855bd91e3a38756b7d75a9c4549, 0x01, 0x02, 0x03 -> 0x20, 0x20, 966588469268559010541288244128342317224451555083

// ecAdd(uint256[4]): 0x01, 0x02, 0x01, 0x02                   -> 0x20, 0x40, 1368015179489954701390400359078579693043519447331113978918064868415326638035, 9918110051302171585080402603319702774565515993150576347155970296011118125764
// ecAdd(uint256[4]): 0x01, 0x02, 0x01, 0x02, 0x01             -> 0x20, 0x40, 1368015179489954701390400359078579693043519447331113978918064868415326638035, 9918110051302171585080402603319702774565515993150576347155970296011118125764
// ecAdd(uint256[4]): 0x01, 0x02, 0x01, 0x02, 0x01, 0x02       -> 0x20, 0x40, 1368015179489954701390400359078579693043519447331113978918064868415326638035, 9918110051302171585080402603319702774565515993150576347155970296011118125764
// ecAdd(uint256[4]): 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x03 -> 0x20, 0x40, 1368015179489954701390400359078579693043519447331113978918064868415326638035, 9918110051302171585080402603319702774565515993150576347155970296011118125764

// ecMul(uint256[3]): 0x01, 0x02, 0x02                   -> 0x20, 0x40, 1368015179489954701390400359078579693043519447331113978918064868415326638035, 9918110051302171585080402603319702774565515993150576347155970296011118125764
// ecMul(uint256[3]): 0x01, 0x02, 0x02, 0x01             -> 0x20, 0x40, 1368015179489954701390400359078579693043519447331113978918064868415326638035, 9918110051302171585080402603319702774565515993150576347155970296011118125764
// ecMul(uint256[3]): 0x01, 0x02, 0x02, 0x01, 0x02       -> 0x20, 0x40, 1368015179489954701390400359078579693043519447331113978918064868415326638035, 9918110051302171585080402603319702774565515993150576347155970296011118125764
// ecMul(uint256[3]): 0x01, 0x02, 0x02, 0x01, 0x02, 0x03 -> 0x20, 0x40, 1368015179489954701390400359078579693043519447331113978918064868415326638035, 9918110051302171585080402603319702774565515993150576347155970296011118125764
